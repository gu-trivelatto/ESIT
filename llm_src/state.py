from langgraph.graph import StateGraph
from typing_extensions import TypedDict
from typing import List

### State

class GraphState(TypedDict):
    """
    Represents the state of our graph.

    Attributes:
        initial_query: user input
        next_query: partial query generated by the agent
        num_steps: number of steps
        selected_tool: name of the selected tool
        identified_model: name of the model identified by the agent
        rag_questions: questions used for retrieval
        tool_parameters: parameters to be used by tools
        context: list of context generated for the query
        complete_data: indicates completeness of data
        final_answer: LLM generation
    """
    initial_query : str
    query_type: str
    next_query: str
    num_steps : int
    selected_tool: str
    rag_questions : List[str]
    tool_parameters: str
    context : List[str]
    complete_data : bool
    model: str
    scenario: str
    parameter: str
    cs: str
    variable: str
    plot_type: str
    new_value: float
    selection_is_valid: bool
    history: List[dict]
    final_answer : str